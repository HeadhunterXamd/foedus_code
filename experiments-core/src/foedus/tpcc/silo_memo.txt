git clone https://github.com/stephentu/silo.git
cd silo

open .git/config and add the following

[submodule "masstree"]
        url = https://github.com/kohler/masstree-beta.git

"git://github..." does not work in our network.

sudo yum install db4* libdb* jemalloc* mysql* libaio* openssl*

NOTE: jemalloc is not in RHEL (in Fedora, tho). Let's use EPEL in DragonHawk.
  https://dl.fedoraproject.org/pub/epel/6/x86_64/repoview/jemalloc.html  (RHEL6)
  https://dl.fedoraproject.org/pub/epel/7/x86_64/repoview/jemalloc.html  (RHEL7)
For some reason it doesn't create /usr/lib64/libjemalloc.so (only /usr/lib64/libjemalloc.so.1)
Let's create the link.
  sudo ln -s /usr/lib64/libjemalloc.so.1 /usr/lib64/libjemalloc.so

Also db_cxx not in RHEL. gggrrr.
  https://dl.fedoraproject.org/pub/epel/7/x86_64/repoview/libdb4.html
  https://dl.fedoraproject.org/pub/epel/7/x86_64/repoview/libdb4-devel.html
  https://dl.fedoraproject.org/pub/epel/7/x86_64/repoview/libdb4-cxx.html
  https://dl.fedoraproject.org/pub/epel/7/x86_64/repoview/libdb4-cxx-devel.html
Fedora is sweet.

Open Makefile.
Change this line (L79)
  CXXFLAGS += -MD -Ithird-party/lz4 -DCONFIG_H=\"$(CONFIG_H)\"
To
  CXXFLAGS += -MD -Ithird-party/lz4 -I/usr/include/libdb4/ -DCONFIG_H=\"$(CONFIG_H)\"
Probably this is not an issue in ubuntu.

This line (L152)
  BENCH_LDFLAGS := $(LDFLAGS) -ldb_cxx -lz -lrt -lcrypt -laio -ldl -lssl -lcrypto
to
  BENCH_LDFLAGS := $(LDFLAGS) -L/usr/lib64/libdb4 -ldb_cxx -lz -lrt -lcrypt -laio -ldl -lssl -lcrypto


make -j
make -j dbtest

cd out-perf.masstree/


--new-order-remote-item-pct %d
./benchmarks/dbtest --verbose --bench tpcc --num-threads 1 --scale-factor 1 --runtime 30 --numa-memory 2G

Example:
./benchmarks/dbtest --verbose --bench tpcc --num-threads 1 --scale-factor 1 --runtime 30 --numa-memory 2G --bench-opts --new-order-remote-item-pct=10


# small (z820)
./benchmarks/dbtest --verbose --bench tpcc --num-threads 14 --scale-factor 14 --runtime 30 --numa-memory 14G

--- benchmark statistics ---
runtime: 30.0007 sec
memory delta: 341.355 MB
memory delta rate: 11.3783 MB/sec
logical memory delta: 1470.72 MB
logical memory delta rate: 49.0228 MB/sec
agg_nosync_throughput: 772830 ops/sec
avg_nosync_per_core_throughput: 55202.1 ops/sec/core
agg_throughput: 772830 ops/sec
avg_per_core_throughput: 55202.1 ops/sec/core
agg_persist_throughput: 772830 ops/sec
avg_per_core_persist_throughput: 55202.1 ops/sec/core
avg_latency: 0.0180597 ms
avg_persist_latency: 0 ms
agg_abort_rate: 31.4659 aborts/sec
avg_per_core_abort_rate: 2.24757 aborts/sec/core
txn breakdown: [[Delivery, 926891], [NewOrder, 10434899], [OrderStatus, 929803], [Payment, 9968562], [StockLevel, 926216]]
--- system counters (for benchmark) ---


# medium (dl580)
./benchmarks/dbtest --verbose --bench tpcc --num-threads 52 --scale-factor 52 --runtime 30 --numa-memory 104G

--- benchmark statistics ---
runtime: 30.003 sec
memory delta: 1451.19 MB
memory delta rate: 48.3681 MB/sec
logical memory delta: 4203.08 MB
logical memory delta rate: 140.089 MB/sec
agg_nosync_throughput: 2.20851e+06 ops/sec
avg_nosync_per_core_throughput: 42471.4 ops/sec/core
agg_throughput: 2.20851e+06 ops/sec
avg_per_core_throughput: 42471.4 ops/sec/core
agg_persist_throughput: 2.20851e+06 ops/sec
avg_per_core_persist_throughput: 42471.4 ops/sec/core
avg_latency: 0.0234767 ms
avg_persist_latency: 0 ms
agg_abort_rate: 96.0905 aborts/sec
avg_per_core_abort_rate: 1.84789 aborts/sec/core
txn breakdown: [[Delivery, 2649836], [NewOrder, 29819860], [OrderStatus, 2651989], [Payment, 28493597], [StockLevel, 2649523]]
--- system counters (for benchmark) ---

./benchmarks/dbtest --verbose --bench tpcc --num-threads 48 --scale-factor 48 --runtime 30 --numa-memory 96G
--- benchmark statistics ---
runtime: 30.0038 sec
memory delta: 1315.01 MB
memory delta rate: 43.8281 MB/sec
logical memory delta: 3865.12 MB
logical memory delta rate: 128.821 MB/sec
agg_nosync_throughput: 2.03084e+06 ops/sec
avg_nosync_per_core_throughput: 42309.2 ops/sec/core
agg_throughput: 2.03084e+06 ops/sec
avg_per_core_throughput: 42309.2 ops/sec/core
agg_persist_throughput: 2.03084e+06 ops/sec
avg_per_core_persist_throughput: 42309.2 ops/sec/core
avg_latency: 0.0235673 ms
avg_persist_latency: 0 ms
agg_abort_rate: 84.7893 aborts/sec
avg_per_core_abort_rate: 1.76644 aborts/sec/core
txn breakdown: [[Delivery, 2436634], [NewOrder, 27423337], [OrderStatus, 2438722], [Payment, 26199431], [StockLevel, 2437261]]
--- system counters (for benchmark) ---


# large (DH)
./benchmarks/dbtest --verbose --bench tpcc --num-threads 192 --scale-factor 192 --runtime 30 --numa-memory 384G

Ggggrrr, initialization takes much longer. Seems like pre-faulting code is single-threaded.
Also, the post-check of tables seems single-threaded, too. Takes several minutes, mmm.
Still much faster than H-store to experiment, tho.


--- benchmark statistics ---
runtime: 30.0431 sec
memory delta: 4133.85 MB
memory delta rate: 137.597 MB/sec
logical memory delta: 12230.7 MB
logical memory delta rate: 407.106 MB/sec
agg_nosync_throughput: 6.1388e+06 ops/sec
avg_nosync_per_core_throughput: 31972.9 ops/sec/core
agg_throughput: 6.1388e+06 ops/sec
avg_per_core_throughput: 31972.9 ops/sec/core
agg_persist_throughput: 6.1388e+06 ops/sec
avg_per_core_persist_throughput: 31972.9 ops/sec/core
avg_latency: 0.0311772 ms
avg_persist_latency: 0 ms
agg_abort_rate: 263.488 aborts/sec
avg_per_core_abort_rate: 1.37234 aborts/sec/core
txn breakdown: [[Delivery, 7371674], [NewOrder, 83011096], [OrderStatus, 7377100], [Payment, 79300416], [StockLevel, 7375907]]
--- system counters (for benchmark) ---

About half of FOEDUS's throughput.
