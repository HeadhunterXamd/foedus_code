http://hstore.cs.brown.edu/documentation/deployment/client-configuration/

cd /dev/shm
git clone --depth 1 http://github.com/apavlo/h-store.git
Or tar -xf ~/h-store_copy_20141019.tar.gz

git clone --depth 1 http://245-1.bfc.hpl.hp.com/kimurhid/h-store.git

ant build

ssh-keygen -t dsa
< Enter a few times >

cat ~/.ssh/id_dsa.pub >> ~/.ssh/authorized_keys

AND ALSO SET PERMISSION!
chmod 644 ~/.ssh/authorized_keys

/etc/ssh/sshd_config
RSAAuthentication yes
PubkeyAuthentication yes
PermitEmptyPasswords yes

ssh localhost date


parameter templates and why

-Dsite.jvm_asserts=false
To increase performance

-Dsite.cpu_affinity=false
Andy's recommendation.
=> Well, actually this slows it down at least on Z820.
we should experiment both cpu affinity true and false

-Dclient.blocking=false
To increase throughput

-Dclient.memory=512
In MB. Adjust depending on machine size.

-Dsite.memory=8192
In MB. Adjust depending on machine size.

-Dglobal.memory=2048
Increase only on DragonHawk. Otherwise won't cause an issue.

-Dclient.txnrate=10000

-Dclient.threads_per_host=50
Adjust depending on machine size.


-Dneworder_multip=false
-Dneworder_multip=true
-Dneworder_multip_mix=1
These can't be specified from command line. has to generate tpcc.properties.


-Dhosts="localhost:0:0-3;localhost:1:4-7"
Vary it

Concatenated

ant hstore-prepare hstore-benchmark -Dproject=tpcc -Dsite.jvm_asserts=false -Dclient.blocking=false -Dclient.memory=512 -Dsite.memory=8192 -Dglobal.memory=2048 -Dclient.txnrate=10000 -Dclient.threads_per_host=50 -Dhosts="localhost:0:0-3;localhost:1:4-7"

kimurhid         soft    nproc           65536
kimurhid         hard    nproc           65536

Note, be aware of this error:
  hstore-site:
  OpenJDK 64-Bit Server VM warning: Max heap size too large for Compressed Oops
Keep heap sizes within 32GB.


Edit this file:
emacs -nw src/frontend/org/voltdb/processtools/ProcessSetManager.java

Change line 77
    private static final int POLLING_DELAY = 2000; // ms
to
    private static final int POLLING_DELAY = 60000; // ms

Change line 329:
  this(null, false, 10000, null);
to
  this(null, false, 60000, null);


Then ant


http://hstore.cs.brown.edu/documentation/deployment/anti-caching/
http://hstore.cs.brown.edu/documentation/deployment/command-logging/

ant hstore-prepare -Dproject=tpcc -Devictable="HISTORY,CUSTOMER,ORDERS,ORDER_LINE" -Dhosts="localhost:0:0-7"

ant hstore-benchmark -Dproject=tpcc -Dsite.anticache_enable=true -Dsite.anticache_dir=/testnvm/anticache \
  -Dsite.commandlog_enable=true -Dsite.commandlog_dir="/testnvm/commandlog/" \
  -Dsite.commandlog_timeout=500 -Dsite.jvm_asserts=false -Dclient.blocking=false \
  -Dsite.cpu_affinity=true -Dclient.memory=512 -Dsite.memory=8192 -Dglobal.memory=2048 \
  -Dclient.txnrate=2000 -Dclient.threads_per_host=20 \
  -Dhosts="localhost:0:0-7"

sudo umount /testnvm
sudo mount -t nvmfs -o rd_delay_ns_fixed=0,wr_delay_ns_fixed=0,rd_delay_ns_per_kb=0,wr_delay_ns_per_kb=0,cpu_freq_mhz=2800,size=1000000m nvmfs /testnvm
mkdir /testnvm/anticache;mkdir /testnvm/commandlog


"site.anticache_batching"
Default:  false
Permitted Tye:  boolean
Turn on batching for anticaching

Mmm, should we use it? let's try...

ant hstore-benchmark -Dproject=tpcc -Dsite.anticache_enable=true -Dsite.anticache_dir=/testnvm/anticache \
  -Dsite.commandlog_enable=true -Dsite.commandlog_dir="/testnvm/commandlog/" \
  -Dsite.commandlog_timeout=500 -Dsite.jvm_asserts=false -Dclient.blocking=false \
  -Dsite.cpu_affinity=true -Dclient.memory=512 -Dsite.memory=8192 -Dglobal.memory=2048 \
  -Dclient.txnrate=2000 -Dclient.threads_per_host=20 -Dsite.anticache_batching=true \
  -Dhosts="localhost:0:0-7"
No, it doesn't help. Actually it causes crashes.
