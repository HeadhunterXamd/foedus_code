## Valgrind suppression file
## Add false positives and third party's bugs to here.
## valgrind --leak-check=full --show-leak-kinds=all --suppressions=<path_to_valgrind.supp> --gen-suppressions=all ./<your_program>
## Put <Reporter> <Date> <Environment> <Some comment> for each of them

# Hideaki, 2014 Apr, Fedora 19, libunwind's bug.
{
   libunwind_bug1
   Memcheck:Param
   msync(start)
   fun:__msync_nocancel
   obj:/usr/lib64/libunwind.so.8.0.1
   obj:/usr/lib64/libunwind.so.8.0.1
   obj:/usr/lib64/libunwind.so.8.0.1
   obj:/usr/lib64/libunwind.so.8.0.1
   fun:_ULx86_64_step
   fun:_Z13GetStackTracePPvii
   fun:_ZN8tcmalloc8PageHeap8GrowHeapEm
   fun:_ZN8tcmalloc8PageHeap3NewEm
   fun:_ZN8tcmalloc15CentralFreeList8PopulateEv
   fun:_ZN8tcmalloc15CentralFreeList18FetchFromSpansSafeEv
   fun:_ZN8tcmalloc15CentralFreeList11RemoveRangeEPPvS2_i
}
{
   libunwind_bug2
   Memcheck:Param
   msync(start)
   obj:/usr/lib64/libpthread-2.18.so
   obj:/usr/lib64/libunwind.so.8.0.1
   obj:/usr/lib64/libunwind.so.8.0.1
   obj:/usr/lib64/libunwind.so.8.0.1
   obj:/usr/lib64/libunwind.so.8.0.1
   fun:_ULx86_64_step
   fun:_Z13GetStackTracePPvii
   fun:_ZN8tcmalloc8PageHeap8GrowHeapEm
   fun:_ZN8tcmalloc8PageHeap3NewEm
   fun:_ZN8tcmalloc15CentralFreeList8PopulateEv
   fun:_ZN8tcmalloc15CentralFreeList18FetchFromSpansSafeEv
   fun:_ZN8tcmalloc15CentralFreeList11RemoveRangeEPPvS2_i
}

# Hideaki, 2014 Apr, Fedora 20, libprofiler's bug.
{
   libprofiler_bug1
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:_Znwm
   fun:_ZN14ProfileHandler4InitEv
   fun:pthread_once
   fun:_ZN14ProfileHandler8InstanceEv
   fun:ProfileHandlerRegisterThread
   obj:/usr/lib64/libprofiler.so.0.3.2
   fun:call_init.part.0
   fun:_dl_init
   obj:/usr/lib64/ld-2.18.so
}

# Hideaki, 2014 Apr, Fedora 20,
# http://comments.gmane.org/gmane.linux.kernel.numa/814
# According to this, these are by design, not a bug of libnuma.
{
   numa_run_on_node_global1
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:numa_bitmask_alloc
   fun:numa_node_to_cpus
   fun:numa_run_on_node
}
{
   numa_run_on_node_global2
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:calloc
   obj:/usr/lib64/libnuma.so.1
   fun:numa_node_to_cpus
   fun:numa_run_on_node
}
{
   numa_run_on_node_global3
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:calloc
   fun:numa_bitmask_alloc
   fun:numa_node_to_cpus
   fun:numa_run_on_node
}
